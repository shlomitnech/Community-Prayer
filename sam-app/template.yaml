AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 10
    Handler: app.lambda_handler
    Runtime: python3.13
    Architectures:
      - arm64
    Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref NamesSubmittedTable

Resources:
  NamesSubmittedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: NamesSubmitted
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "NamesID"
          AttributeType: "S"
        - AttributeName: "Email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "NamesID"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: Email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  AllSubscribersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: AllSubscribers
      AttributeDefinitions:
        - AttributeName: SubscriberID
          AttributeType: S
        - AttributeName: Email
          AttributeType: S
      KeySchema:
        - AttributeName: SubscriberID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: Email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  SubmitNameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: submit_name/
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /submit-name
            Method: post

  ReadNamesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: read_names/
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /read-names
            Method: Any


  UpdateNamesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_names/
      Events:
        UpdateNames:
          Type: Api
          Properties:
            Path: /update-names
            Method: post

  DeleteNamesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_names/
      Events:
        UpdateNames:
          Type: Api
          Properties:
            Path: /delete-names
            Method: post


  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: NamesAPI
      StageName: Stage
      Description: API for managing names
      EndpointConfiguration:
        Types:
          - REGIONAL
      Cors:
        AllowOrigins: "'*'"
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        MaxAge: 600


Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
